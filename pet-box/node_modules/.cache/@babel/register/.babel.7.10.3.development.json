{
  "{\"sourceRoot\":\"/Users/meganhuggins/turing/4module/PreWork/pet-box/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/meganhuggins/turing/4module/PreWork/pet-box\",\"filename\":\"/Users/meganhuggins/turing/4module/PreWork/pet-box/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/meganhuggins/turing/4module/PreWork/pet-box\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/meganhuggins/turing/4module/PreWork/pet-box/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/meganhuggins/turing/4module/PreWork/pet-box",
      "filename": "/Users/meganhuggins/turing/4module/PreWork/pet-box/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/meganhuggins/turing/4module/PreWork/pet-box",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/meganhuggins/turing/4module/PreWork/pet-box/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/meganhuggins/turing/4module/PreWork/pet-box/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/meganhuggins/turing/4module/PreWork/pet-box/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar cors = require('cors');\n\nvar app = express();\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.locals.pets = [{\n  id: \"a1\",\n  name: \"Rover\",\n  type: \"dog\"\n}, {\n  id: \"b2\",\n  name: \"Marcus Aurelius\",\n  type: \"parakeet\"\n}, {\n  id: \"c3\",\n  name: \"Craisins\",\n  type: \"cat\"\n}];\napp.use(express.json());\napp.use(express[\"static\"](\"public\"));\napp.use(cors());\napp.get('/', function (request, response) {});\napp.get('/api/v1/pets', function (request, response) {\n  var pets = app.locals.pets;\n  response.json({\n    pets: pets\n  });\n});\napp.get('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\napp.post('/api/v1/pets', function (request, response) {\n  var id = Date.now();\n  var pet = request.body;\n\n  for (var _i = 0, _arr = ['name', 'type']; _i < _arr.length; _i++) {\n    var requiredParameter = _arr[_i];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  var name = pet.name,\n      type = pet.type;\n  app.locals.pets.push({\n    id: id,\n    name: name,\n    type: type\n  });\n  response.status(201).json({\n    id: id,\n    name: name,\n    type: type\n  });\n});\napp.patch('/api/v1/pets', function (request, response) {\n  var pet = request.body;\n\n  for (var _i2 = 0, _arr2 = ['id', 'name']; _i2 < _arr2.length; _i2++) {\n    var requiredParameter = _arr2[_i2];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  var id = pet.id,\n      name = pet.name;\n  app.locals.pets.map(function (pet) {\n    if (pet.id === id) {\n      pet.name = name;\n    }\n  });\n  response.sendStatus(201);\n});\napp[\"delete\"]('/api/vi/pets', function (request, response) {\n  var pet = request.body;\n\n  if (!pet.id) {\n    return response.status(422).send({\n      error: \"Expected format: { name: <String>, type: <String> }. You're missing a required 'id'.\"\n    });\n  }\n\n  var petId = app.locals.pets.findIndex(function (id) {\n    return id === pet.id;\n  });\n  app.locals.pets.splice(petId, 1);\n  return response.sendStatus(201);\n});\napp.listen(app.get('port'), function () {\n  console.log(\"\".concat(app.locals.title, \" is running on http://localhost:\").concat(app.get('port'), \".\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "cors",
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "locals",
        "title",
        "pets",
        "id",
        "name",
        "type",
        "use",
        "json",
        "get",
        "request",
        "response",
        "params",
        "pet",
        "find",
        "sendStatus",
        "status",
        "post",
        "Date",
        "now",
        "body",
        "requiredParameter",
        "send",
        "error",
        "push",
        "patch",
        "map",
        "petId",
        "findIndex",
        "splice",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/meganhuggins/turing/4module/PreWork/pet-box/",
      "sourcesContent": [
        "const express = require('express');\nconst cors = require('cors')\nconst app = express();\n\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\n\napp.locals.pets = [\n    { id: \"a1\", name: \"Rover\", type: \"dog\" },\n    { id: \"b2\", name: \"Marcus Aurelius\", type: \"parakeet\" },\n    { id: \"c3\", name: \"Craisins\", type: \"cat\" },\n  ];\n\napp.use(express.json());\napp.use(express.static(\"public\"));\napp.use(cors());\n\n\napp.get('/', (request, response) => {});\n\napp.get('/api/v1/pets', (request, response) => {\n    const pets = app.locals.pets;\n\n    response.json({ pets });\n});\n\napp.get('/api/v1/pets/:id', (request, response) => {\n    const { id } = request.params;\n    const pet = app.locals.pets.find(pet => pet.id === id);\n\n    if(!pet) {\n        return response.sendStatus(404);\n    }\n\n    response.status(200).json(pet);\n});\n\napp.post('/api/v1/pets', (request, response) => {\n    const id = Date.now();\n    const pet = request.body;\n\n    for(let requiredParameter of ['name', 'type']) {\n        if(!pet[requiredParameter]) {\n            return response \n                .status(422)\n                .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.` \n            });\n        }\n    }\n    \n    const { name, type } = pet;\n    app.locals.pets.push({ id, name, type });\n    response.status(201).json({ id, name, type });\n});\n\napp.patch('/api/v1/pets', (request, response) => {\n    const pet = request.body;\n\n    for(let requiredParameter of ['id', 'name']) {\n        if(!pet[requiredParameter]) {\n            return response\n                .status(422)\n                .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.` \n            });\n        }\n    }\n\n    const { id, name } = pet;\n    app.locals.pets.map(pet => {\n        if(pet.id === id) {\n            pet.name = name; \n        }\n    });\n\n    response.sendStatus(201);\n});\n\napp.delete('/api/vi/pets', (request, response) => {\n    const pet = request.body;\n\n    if(!pet.id) {\n        return response \n            .status(422)\n            .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a required 'id'.` \n        });\n    }\n\n    const petId = app.locals.pets.findIndex(id => id === pet.id);\n    app.locals.pets.splice(petId, 1);\n\n    return response.sendStatus(201);\n});\n\napp.listen(app.get('port'), () => {\n  console.log(`${app.locals.title} is running on http://localhost:${app.get('port')}.`);\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1593119063738
  }
}